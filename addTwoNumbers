
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    struct ListNode* temp = (struct ListNode*)malloc (sizeof (struct ListNode));
    struct ListNode* head = temp;
    memset(head, 0, sizeof(struct ListNode));    
    int sum = 0;
    int carry=0;
        
    while(l1!=NULL || l2!=NULL || carry ){
        
         if (l1 && l2) {
            sum = carry + l1->val + l2->val;          
        } else if (l1) {
            sum = carry + l1->val;
        } else if (l2) {
            sum = carry + l2->val;
        } else if (carry){
             sum = carry;
        } 
        carry=0;
        temp->val = sum%10;
        carry= sum/10;

        if (l1!=NULL)
            l1 = l1->next;
        if (l2!=NULL)
            l2 = l2->next;
        if (l1 || l2 || carry){
            struct ListNode* node = (struct ListNode*)malloc (sizeof (struct ListNode));
            memset(node, 0, sizeof(struct ListNode));
            node->next = NULL;
            temp->next = node;
            temp=(temp)->next;
        }
    }
    return head;
}
